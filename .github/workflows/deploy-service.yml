permissions:
  contents: read
name: サービスのアプリケーションをデプロイ

on:
  push:
    branches:
      - develop
      - main
    paths:
      - "apps/service/**"
      - "apps/image-optimizer/**"
      - "packages/**"
      - "pnpm-lock.yaml"
      - ".github/workflows/deploy-service.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: ./.github/actions/setup-pnpm

      - name: Create wrangler.jsonc from template
        run: |
          cd apps/service
          cp wrangler.example.jsonc wrangler.jsonc

          # 開発環境の値を置換
          sed -i "s|<DEVELOPMENT_URL>|${{ secrets.DEVELOPMENT_URL }}|g" wrangler.jsonc
          sed -i "s|<DEVELOPMENT_DATABASE_ID>|${{ secrets.DEVELOPMENT_DATABASE_ID }}|g" wrangler.jsonc
          sed -i "s|<DEVELOPMENT_R2_URL>|${{ vars.DEVELOPMENT_R2_URL }}|g" wrangler.jsonc
          sed -i "s|<DEVELOPMENT_IMAGE_OPTIMIZER_URL>|${{ vars.DEVELOPMENT_IMAGE_OPTIMIZER_URL }}|g" wrangler.jsonc
          # sed -i "s|<FORM_CONTACT_URL>|${{ secrets.FORM_CONTACT_URL }}|g" wrangler.jsonc

          # 本番環境の値を置換
          sed -i "s|<PRODUCTION_URL>|${{ secrets.PRODUCTION_URL }}|g" wrangler.jsonc
          sed -i "s|<PRODUCTION_DATABASE_ID>|${{ secrets.PRODUCTION_DATABASE_ID }}|g" wrangler.jsonc
          sed -i "s|<PRODUCTION_R2_URL>|${{ vars.PRODUCTION_R2_URL }}|g" wrangler.jsonc
          sed -i "s|<PRODUCTION_IMAGE_OPTIMIZER_URL>|${{ vars.PRODUCTION_IMAGE_OPTIMIZER_URL }}|g" wrangler.jsonc
          sed -i "s|<UMAMI_SCRIPT_URL>|${{ vars.UMAMI_SCRIPT_URL }}|g" wrangler.jsonc
          sed -i "s|<UMAMI_WEBSITE_ID>|${{ secrets.UMAMI_WEBSITE_ID }}|g" wrangler.jsonc

          echo "wrangler.jsonc created successfully"

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/apps/service/.next/cache
            ${{ github.workspace }}/.turbo
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Develop Build
        if: github.ref == 'refs/heads/develop'
        run: pnpm build:service
        env:
          NEXT_PUBLIC_R2_URL: ${{ vars.DEVELOPMENT_R2_URL }}

      - name: Deploy to development environment
        if: github.ref == 'refs/heads/develop'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: apps/service

      - name: Develop Build
        if: github.ref == 'refs/heads/main'
        run: pnpm build:service
        env:
          NEXT_PUBLIC_R2_URL: ${{ vars.PRODUCTION_R2_URL }}

      - name: Deploy to production environment
        if: github.ref == 'refs/heads/main'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env production
          workingDirectory: apps/service
